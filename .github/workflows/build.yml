on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_call:
    outputs:
      artifact-name:
        description: 'The name of the uploaded artifact'
        value: ${{ jobs.build.outputs.artifact-name }}

# Set permissions
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.upload-artifact.outputs.artifact-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Install dependencies
        run: npm ci

      # Create a cache key from relevant dependencies
      - name: Create WebAssembly cache key
        id: cache-key
        run: |
          WFSLIB_SHA=$(git -C submodules/wfslib rev-parse HEAD)
          BINDINGS_HASH=$(sha256sum cpp/bindings.cpp | cut -d' ' -f1)
          CMAKE_HASH=$(sha256sum CMakeLists.txt CMakePresets.json cpp/CMakeLists.txt | sha256sum | cut -d' ' -f1)
          CACHE_KEY="wasm-build-${BINDINGS_HASH:0:10}-wfslib-${WFSLIB_SHA:0:10}-cmake-${CMAKE_HASH:0:10}"
          echo "key=$CACHE_KEY" >> $GITHUB_OUTPUT
          echo "Generated cache key: $CACHE_KEY"

      # Cache the WebAssembly module
      - name: Cache WebAssembly module
        id: cache-wasm
        uses: actions/cache@v3
        with:
          path: src/assets/wasm/
          key: ${{ steps.cache-key.outputs.key }}

      # Only build WebAssembly if cache miss
      - name: Setup Emscripten
        if: steps.cache-wasm.outputs.cache-hit != 'true'
        run: npm run setup:emscripten

      - name: Build WebAssembly module
        if: steps.cache-wasm.outputs.cache-hit != 'true'
        run: npm run build:wasm:release

      - name: Build frontend
        run: npm run build

      - name: Upload artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: wfs-tools-web-build
          path: './dist'
